unit uWindowGeoData;


interface

uses
  ShareMem,
  SysUtils,
  Forms,
  uPluginHeaders,
  JvAppIniStorage,
  Classes,
  Windows,
  Controls,
  ActnList,
  DB,
  ADODB,
  uWindowGeoDataForm;



function Initialize(App : TApplication;
                          Scr : TScreen;
                          ActionList:TActionList;
                          AppStorage:TJvAppIniFileStorage;
                          ImageList:TImageList;
                          DllCommand:pointer;
                          Connection:TADOConnection;
                          dsLogEdit:TDataSource;
                          dsLog:TDataSource
                    ): Integer; stdcall;

function DeInitialize(): Integer; stdcall;
function RegisterWindow(var WindowName: PChar): Integer; stdcall;
function GetWindow(handle: THandle): TForm; stdcall;
function CoreCommand(IdCommand:integer;Sender:TObject; lParam, wParam:variant):integer; stdcall;

var
WindowGeoDataForm:TWindowGeoDataForm;
aHandle:THandle;
aApplication:TApplication;
ldsLogEdit:TDataSource;
lConnection:TADOConnection;
lDllCommand: TDllCommand;
lInitBand,lInitMode:integer;
lAppStorage:TJvAppIniFileStorage;



implementation






function Initialize(App : TApplication;
                          Scr : TScreen;
                          ActionList:TActionList;
                          AppStorage:TJvAppIniFileStorage;
                          ImageList:TImageList;
                          DllCommand:pointer;
                          Connection:TADOConnection;
                          dsLogEdit:TDataSource;
                          dsLog:TDataSource
                    ): Integer; stdcall;
begin
 Application:=App;
 ldsLogEdit:=dsLogEdit;
 lConnection:=Connection;
 lAppStorage:=AppStorage;
 @lDllCommand := DllCommand;
 Result:=1;
end;

function DeInitialize():integer; stdcall;
begin
 if Assigned(WindowGeoDataForm) then
   WindowGeoDataForm.Free;
 Result:=1;
end;


function RegisterWindow(var WindowName : PChar):integer; stdcall;
begin
 WindowName:=PChar('WindowGeoData');
 Result:=1;
end;


function GetWindow(handle: THandle):TForm; stdcall;
begin
 if not Assigned(WindowGeoDataForm) then
   begin
     WindowGeoDataForm:=TWindowGeoDataForm.Create(Application);

     WindowGeoDataForm.dbeLocator.DataSource:=ldsLogEdit;
     WindowGeoDataForm.dblContinents.DataSource:=ldsLogEdit;
     WindowGeoDataForm.dblTerritory.DataSource:=ldsLogEdit;
     WindowGeoDataForm.dbceLatitude.DataSource:=ldsLogEdit;
     WindowGeoDataForm.dbceLongitude.DataSource:=ldsLogEdit;
     WindowGeoDataForm.dbePrefix.DataSource:=ldsLogEdit;
     WindowGeoDataForm.dbceDxccId.DataSource:=ldsLogEdit;
     WindowGeoDataForm.qryTerritory.Connection:=lConnection;
     WindowGeoDataForm.qryContinents.Connection:=lConnection;
     WindowGeoDataForm.qryContinents.Open;


   end;
 result:=WindowGeoDataForm;
end;


function CoreCommand(IdCommand:integer;Sender:TObject; lParam, wParam:variant):integer; stdcall;
begin
  case IdCommand of
   CC_CALL_CHANGED : if Assigned(WindowGeoDataForm) then WindowGeoDataForm.CallChanged(wParam);
  end;
end;





end.



